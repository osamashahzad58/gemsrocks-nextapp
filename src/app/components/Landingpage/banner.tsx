import React, { useEffect, useState } from 'react'
// import "./banner.scss";
// import "react-toastify/dist/ReactToastify.css";
import Table from 'react-bootstrap/Table';
import Pagination from 'react-bootstrap/Pagination';
import Link from 'next/link';
// import { api_url } from "../../../utils/Enviroment";
// import axios from "axios";
// import Loader from '../../../loader';
// import { formatEthinDollar, formatMarketCap, getTimeInAges } from '../../../utils/helpers';
// import { ethToDollarConverter } from '../../../utils/services/service';
// import { useSocketEvents } from '../../../hooks/dataFetcher/Socket'

const Banner = () => {
    const [currentPage, setCurrentPage] = useState(1);
    const [totalPages, setTotalPages] = useState(0);
    const [totalItems, setTotalItems] = useState(0);
    const [rock, setRock] = useState([]);
    const [trending, setTrending] = useState([]);
    const [gainer, setGainer] = useState([]);
    const [stats, setStats] = useState([]);
    const [king, setKing] = useState([]);
    const [loader, setLoader] = useState(false);
    const [ethPrice, setEthPrice] = useState(0);
    const [shake, setShake] = useState(false);
    const [shakeKing, setShakeKing] = useState(false);


    const socketEvent = `NewProject`
    const socketEventKOD = `KOD`

    //   const events = [
    //     {
    //       eventName: socketEvent,
    //       handler: (data) => {
    //         if (data !== null) {
    //           setRock([data, ...rock])
    //           setShake(true);
    //           setTimeout(() => {
    //             setShake(false);
    //           }, 1500);

    //         }
    //       },
    //     },
    //     {
    //       eventName: socketEventKOD,
    //       handler: (data) => {
    //         if (data !== null) {
    //           setKing(data)
    //           setShakeKing(true);
    //           setTimeout(() => {
    //             setShakeKing(false);
    //           }, 1500);
    //         }
    //       },
    //     }
    //   ];
    //   useSocketEvents(events);

    //   const handlePageChange = (page) => {
    //     if (page >= 1 && page <= totalPages) {
    //       setCurrentPage(page);
    //     }
    //   };

    //   const pageItems = [];
    //   for (let i = 1; i <= totalPages; i++) {
    //     pageItems.push(i);
    //   }

    //   const getRocks = async () => {
    //     setLoader(true);
    //     try {
    //       const { data } = await axios.get(`${api_url}project/get-all-projects?limit=12&page=${currentPage}`,);
    //       setRock(data?.data?.projects);
    //       setTotalPages(data?.data?.totalPages);
    //       setTotalItems(data?.data?.total);
    //       setLoader(false);
    //     } catch (error) {
    //       console.error("Error fetching:", error);
    //       setLoader(false);
    //     }
    //   };


    //   const getTranding = async () => {
    //     try {
    //       const { data } = await axios.get(`${api_url}project/get-trending-projects`,);
    //       setTrending(data?.data?.projects)

    //     } catch (error) {
    //       console.error("Error fetching:", error);
    //       setLoader(false);
    //     }
    //   };

    //   const getGainer = async () => {
    //     try {
    //       const { data } = await axios.get(`${api_url}project/get-top-gainer-projects`,);
    //       setGainer(data?.data?.projects)

    //     } catch (error) {
    //       console.error("Error fetching:", error);
    //       setLoader(false);
    //     }
    //   };

    //   const getStats = async () => {
    //     try {
    //       const { data } = await axios.get(`${api_url}dashboards/get-dashboard-data`,);
    //       setStats(data?.data)

    //     } catch (error) {
    //       console.error("Error fetching:", error);
    //       setLoader(false);
    //     }
    //   };

    //   const getKing = async () => {
    //     try {
    //       const { data } = await axios.get(`${api_url}project/get-king-of-the-desert-project`,);
    //       setKing(data?.data)

    //     } catch (error) {
    //       console.error("Error fetching:", error);
    //       setLoader(false);
    //     }
    //   };

    //   const fetchEthValue = async () => {
    //     const ethAmount = await ethToDollarConverter();
    //     setEthPrice(ethAmount);
    //   };


    //   useEffect(() => {
    //     getTranding();
    //     getGainer();
    //     getStats();
    //     getKing();
    //     fetchEthValue();
    //   }, []);

    //   useEffect(() => {
    //     getRocks();
    //   }, [currentPage]);

    return (
        <>
            {/* {loader && <Loader />} */}
            <section className="main_banner ">
                <div className="custom-container">
                    <div className="banner_bg_Div">
                        <div className="innner_textbanner">

                            <h1>The Memecoin Launchpad</h1>

                            <h4 className='powerd_by_tag'>Powered by
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none">
                                    <path d="M5.06864 3.60007L1.80051 7.02054V9.23905L9.00211 16.2001L16.2005 9.24279V8.34692H7.40762L8.01698 10.1965H12.1081L9.00147 13.2008L4.06677 8.42904L6.57241 5.80987H11.4305L12.5013 6.93033H15.7964V6.59811L12.9317 3.60007H5.06864Z" fill="#FFF3E2" />
                                </svg> <span> <a href='https://gems.vip/' target='blank'>Gems</a></span></h4>
                            {/* <h3>From Rocks to Gems</h3> */}
                            <p className='bannner_ptag'>Unearth the potential hidden in every rock and watch it transform into a shining gem. From raw ideas to polished success, we help your tokens graduate to greatness.</p>


                            <div className='tokkenmain'>
                                <Link href="/createnetwork">
                                    <button className='lunchtokken d-none'>
                                        Launch Token
                                    </button>
                                </Link>
                            </div>
                            <Link href="/rocks">
                                <button>Explore Rocks</button>
                            </Link>
                            <h4 className='powerd_by_tag1'>Rocks is built on <svg xmlns="http://www.w3.org/2000/svg" width="119" height="22" viewBox="0 0 119 22" fill="none">
                                <g clip-path="url(#clip0_1177_277)">
                                    <path d="M0.755157 6.68978V15.3102C0.755157 15.8386 1.06488 16.367 1.51032 16.6295L9.04452 20.9397C9.53172 21.2022 10.1094 21.2022 10.5966 20.9397L18.1308 16.6295C18.618 16.367 18.886 15.8386 18.886 15.3102V6.68978C18.886 6.16136 18.5762 5.63295 18.1308 5.37047L10.5931 1.06026C10.1059 0.797783 9.52824 0.797783 9.04104 1.06026L1.50684 5.37047C1.01964 5.63295 0.755157 6.16136 0.755157 6.68978Z" fill="#213147" />
                                    <path d="M11.4805 12.6716L10.4156 15.5761C10.3704 15.6625 10.3704 15.7523 10.4156 15.8386L12.2774 20.8534L14.4037 19.6204L11.832 12.6716C11.7902 12.4954 11.5675 12.4954 11.4805 12.6716Z" fill="#12AAFF" />
                                    <path d="M13.6068 7.74661C13.5616 7.57047 13.3423 7.57047 13.2518 7.74661L12.187 10.6512C12.1417 10.7375 12.1417 10.8273 12.187 10.9136L15.2006 19.1403L17.3269 17.9074L13.6068 7.74661Z" fill="#12AAFF" />
                                    <path d="M9.7962 1.36766C9.84144 1.36766 9.8832 1.36766 9.92844 1.41255L18.0821 6.07503C18.1691 6.11993 18.2143 6.20627 18.2143 6.33751V15.6625C18.2143 15.7488 18.1691 15.8835 18.0821 15.925L9.92844 20.5874C9.8832 20.6323 9.84144 20.6323 9.7962 20.6323C9.75096 20.6323 9.7092 20.6323 9.66396 20.5874L1.51032 15.925C1.42332 15.8801 1.37808 15.7937 1.37808 15.6625V6.33751C1.37808 6.25117 1.42332 6.11648 1.51032 6.07503L9.66396 1.41255C9.70572 1.36766 9.75096 1.36766 9.7962 1.36766ZM9.7962 0.00344849C9.48648 0.00344849 9.21852 0.0897907 8.95404 0.224485L0.800397 4.88697C0.267957 5.19434 -0.0417633 5.72276 -0.0417633 6.33751V15.6625C-0.0417633 16.2358 0.267957 16.8056 0.800397 17.113L8.95404 21.7755C9.21852 21.9067 9.48648 21.9965 9.7962 21.9965C10.1059 21.9965 10.3739 21.9102 10.6384 21.7755L18.792 17.113C19.3244 16.8056 19.6342 16.2772 19.6342 15.6625V6.33751C19.6342 5.7642 19.3244 5.19434 18.792 4.88697L10.6801 0.224485C10.4156 0.0932444 10.1477 0.00344849 9.83796 0.00344849H9.7962Z" fill="#9DCCED" />
                                    <path d="M4.43352 19.1369L5.1852 17.113L6.69204 18.346L5.27568 19.6653L4.43352 19.1369Z" fill="#213147" />
                                    <path d="M9.13151 5.67786H7.04699C6.91475 5.67786 6.73727 5.7642 6.69203 5.89889L2.26199 17.9488L4.38827 19.1818L9.26375 5.94034C9.30899 5.8091 9.21851 5.67786 9.08627 5.67786H9.13151Z" fill="white" />
                                    <path d="M12.7194 5.67786H10.6349C10.5026 5.67786 10.3252 5.7642 10.2799 5.89889L5.23044 19.6204L7.35672 20.8534L12.8516 5.89889C12.8969 5.76765 12.8064 5.63641 12.6742 5.63641L12.7194 5.67786Z" fill="white" />
                                    <path d="M30.469 6.73862C30.8053 6.73862 31.0732 6.80641 31.2729 6.93677C31.4726 7.06714 31.6722 7.33309 31.8772 7.66682L35.9598 14.9726C36.0281 15.0403 36.0281 15.1029 35.9598 15.1707C35.9598 15.2385 35.8915 15.2385 35.7602 15.2385H34.2206C34.0893 15.2385 34.021 15.1707 33.9526 15.1081L33.0752 13.5124H27.3216L26.4494 15.1081C26.3811 15.2385 26.318 15.2385 26.1814 15.2385H24.5736C24.4422 15.2385 24.3739 15.2385 24.3739 15.1707C24.3739 15.1029 24.3739 15.0403 24.3739 14.9726L28.3883 7.66682C28.5879 7.27051 28.7876 7.06714 28.9925 6.93677C29.1974 6.80641 29.3918 6.73862 29.6598 6.73862H30.3954H30.469ZM28.0572 12.1201H32.2712L30.3324 8.53246C30.2641 8.46467 30.2641 8.46467 30.201 8.46467H30.1327C30.0644 8.46467 30.0014 8.46467 30.0014 8.53246L28.0572 12.1201Z" fill="white" />
                                    <path d="M44.8555 6.73862C45.7908 6.73862 46.4633 6.93677 46.8627 7.40088C47.262 7.79719 47.4669 8.46467 47.4669 9.26251V9.92477C47.4669 10.6548 47.3356 11.1867 47.0676 11.583C46.7996 11.9793 46.332 12.2453 45.6647 12.3809L47.7401 14.9726C47.8084 15.0403 47.8084 15.1029 47.8084 15.1707C47.8084 15.2385 47.7401 15.3011 47.6088 15.3011H46.0009C45.8696 15.3011 45.8013 15.3011 45.8013 15.2333C45.733 15.2333 45.733 15.1655 45.6699 15.1029L43.731 12.579H39.785V15.0351C39.785 15.2333 39.7167 15.3011 39.517 15.3011H38.1772C37.9775 15.3011 37.9092 15.2333 37.9092 15.0351V7.13493C37.9092 6.86898 38.0406 6.73862 38.3085 6.73862H44.9343H44.8555ZM39.7692 11.1189H44.4509C44.8502 11.1189 45.1865 11.0511 45.3231 10.853C45.5228 10.6548 45.5911 10.3889 45.5911 10.0551V9.52324C45.5911 9.12693 45.5228 8.86098 45.3231 8.7254C45.1235 8.52724 44.8555 8.45945 44.4509 8.45945H39.9006C39.7692 8.45945 39.7692 8.52724 39.7692 8.58982V11.1189Z" fill="white" />
                                    <path d="M57.7707 6.73862C58.643 6.73862 59.242 6.93677 59.5782 7.27051C59.9145 7.60425 60.1142 8.13614 60.1142 8.7984V9.39809C60.1142 10.0603 59.8462 10.5922 59.3103 10.926C59.8462 11.2597 60.1825 11.7916 60.1825 12.5217V13.2517C60.1825 13.5855 60.1142 13.8514 60.0511 14.1173C59.9881 14.3833 59.8515 14.5815 59.7149 14.7796C59.5152 14.9778 59.3155 15.1133 59.0476 15.1759C58.7796 15.2437 58.4433 15.3063 58.044 15.3063H50.7509C50.4829 15.3063 50.3516 15.1759 50.3516 14.91V7.14014C50.3516 6.8742 50.4829 6.74383 50.7509 6.74383H57.8443H57.7707V6.73862ZM52.2169 10.2585H57.2348C57.6341 10.2585 57.9021 10.1907 58.0387 10.0604C58.1753 9.92998 58.2384 9.7944 58.2384 9.52846V9.13214C58.2384 8.86619 58.1701 8.66804 58.0387 8.60025C57.9074 8.46988 57.6394 8.40209 57.3714 8.40209H52.3535C52.2221 8.40209 52.2221 8.46988 52.2221 8.53246V10.2585H52.2169ZM52.2169 11.5882V13.3821C52.2169 13.5124 52.2852 13.5124 52.3482 13.5124H57.3662C57.7024 13.5124 57.9021 13.4447 58.0335 13.3143C58.1648 13.1839 58.2331 12.9806 58.2331 12.7824V12.3183C58.2331 12.0523 58.1648 11.8542 58.0335 11.7186C57.9021 11.583 57.6341 11.5205 57.1612 11.5205H52.1486L52.2169 11.5882Z" fill="white" />
                                    <path d="M64.7275 6.73862C64.9272 6.73862 64.9955 6.80641 64.9955 7.00456V14.9726C64.9955 15.1707 64.9272 15.2385 64.7275 15.2385H63.3877C63.188 15.2385 63.1197 15.1707 63.1197 14.9726V7.00456C63.1197 6.80641 63.188 6.73862 63.3877 6.73862H64.7275Z" fill="white" />
                                    <path d="M77.6428 6.73862C77.8425 6.73862 77.9108 6.80641 77.9108 7.00456V8.19872C77.9108 8.39688 77.8425 8.46467 77.6428 8.46467H73.7598V14.9726C73.7598 15.1707 73.6915 15.2385 73.4918 15.2385H72.152C71.9523 15.2385 71.884 15.1707 71.884 14.9726V8.46467H68.001C67.8013 8.46467 67.733 8.39688 67.733 8.19872V7.00456C67.733 6.80641 67.8013 6.73862 68.001 6.73862H77.5692H77.6428Z" fill="white" />
                                    <path d="M87.3476 6.73862C88.2829 6.73862 88.9555 6.93677 89.3548 7.40088C89.7541 7.79719 89.9591 8.46467 89.9591 9.26251V9.92477C89.9591 10.6548 89.8277 11.1867 89.5597 11.583C89.2917 11.9793 88.8241 12.2453 88.1568 12.3809L90.2323 14.9726C90.3006 15.0403 90.3006 15.1029 90.3006 15.1707C90.3006 15.2385 90.2323 15.3011 90.1009 15.3011H88.4931C88.3617 15.3011 88.2934 15.3011 88.2934 15.2333C88.2251 15.2333 88.2251 15.1655 88.1621 15.1029L86.2232 12.579H82.2772V15.0351C82.2772 15.2333 82.2088 15.3011 82.0092 15.3011H80.6693C80.4696 15.3011 80.4013 15.2333 80.4013 15.0351V7.13493C80.4013 6.86898 80.5327 6.73862 80.8007 6.73862H87.4264H87.3476ZM82.2614 11.1189H86.943C87.3424 11.1189 87.6787 11.0511 87.8153 10.853C88.0149 10.6548 88.0832 10.3889 88.0832 10.0551V9.52324C88.0832 9.12693 88.0149 8.86098 87.8153 8.7254C87.6156 8.52724 87.3476 8.45945 86.943 8.45945H82.3927C82.2614 8.45945 82.2614 8.52724 82.2614 8.58982V11.1189Z" fill="white" />
                                    <path d="M94.2414 6.73862C94.4411 6.73862 94.5094 6.80641 94.5094 7.00456V11.8542C94.5094 12.1879 94.5094 12.4539 94.5777 12.652C94.646 12.8502 94.709 13.0483 94.8456 13.1839C94.9823 13.3195 95.1136 13.3821 95.3133 13.4499C95.513 13.5177 95.7809 13.5177 96.1172 13.5177H99.5326C99.8688 13.5177 100.137 13.5177 100.336 13.4499C100.536 13.3821 100.736 13.3195 100.804 13.1839C100.935 13.0536 101.004 12.8502 101.072 12.652C101.14 12.4539 101.14 12.1879 101.14 11.8542V7.00456C101.14 6.80641 101.209 6.73862 101.408 6.73862H102.748C102.948 6.73862 103.016 6.80641 103.016 7.00456V12.0523C103.016 12.652 102.948 13.1161 102.817 13.5124C102.685 13.9088 102.48 14.2425 102.212 14.5084C101.944 14.7744 101.608 14.9726 101.14 15.0403C100.673 15.1707 100.205 15.2385 99.5326 15.2385H95.9859C95.3816 15.2385 94.8456 15.1707 94.378 15.0403C93.9787 14.91 93.5741 14.7066 93.3061 14.5084C93.0381 14.2425 92.8385 13.9088 92.7019 13.5124C92.5705 13.1161 92.5022 12.5842 92.5022 12.0523V7.00456C92.5022 6.80641 92.5705 6.73862 92.7702 6.73862H94.11H94.2414Z" fill="white" />
                                    <path d="M108.292 6.73862C108.491 6.73862 108.628 6.73862 108.759 6.80641C108.891 6.80641 109.027 6.8742 109.095 6.93677C109.164 7.00456 109.295 7.06714 109.363 7.20272C109.432 7.33309 109.495 7.46867 109.631 7.66682L112.175 13.5124C112.243 13.5802 112.243 13.6428 112.374 13.6428H112.506C112.574 13.6428 112.637 13.575 112.705 13.5124L115.248 7.66682C115.317 7.46867 115.38 7.33309 115.516 7.20272C115.585 7.07235 115.648 7.00456 115.784 6.93677C115.853 6.86898 115.984 6.80641 116.121 6.80641C116.257 6.80641 116.389 6.73862 116.588 6.73862H117.928C118.327 6.73862 118.664 6.80641 118.8 7.00456C118.932 7.20272 119 7.53646 119 8.00056V14.9725C119 15.1707 118.932 15.2385 118.732 15.2385H117.46C117.261 15.2385 117.192 15.1707 117.192 14.9725V8.60025C117.192 8.53246 117.124 8.46988 117.124 8.46988H116.993C116.925 8.46988 116.861 8.53767 116.861 8.53767L114.387 13.9818C114.318 14.1799 114.187 14.3781 114.05 14.5137C113.914 14.6492 113.851 14.7796 113.714 14.91C113.583 14.9778 113.446 15.1081 113.315 15.1081C113.183 15.1759 112.978 15.1759 112.779 15.1759H112.175C111.975 15.1759 111.775 15.1759 111.639 15.1081C111.502 15.0403 111.371 14.9778 111.239 14.91C111.108 14.8422 111.04 14.7118 110.903 14.5137C110.772 14.3833 110.703 14.1799 110.567 13.9818L108.092 8.53767C108.092 8.46988 108.024 8.46988 107.961 8.46988H107.829C107.761 8.46988 107.761 8.53767 107.761 8.60025V14.9778C107.761 15.1759 107.693 15.2437 107.493 15.2437H106.216C106.016 15.2437 105.948 15.1759 105.948 14.9778V8.00056C105.948 7.53646 106.016 7.20272 106.148 7.00456C106.279 6.80641 106.615 6.73862 107.02 6.73862H108.36H108.292Z" fill="white" />
                                </g>
                                <defs>
                                    <clipPath id="clip0_1177_277">
                                        <rect width="119" height="22" fill="white" />
                                    </clipPath>
                                </defs>
                            </svg></h4>
                        </div>
                    </div>
                </div>
            </section>
            <section className="another_banner">
                <div className="custom-container">
                    <div className="bottom_banner">
                        <div className="top_side_barr">
                            <div className={shakeKing ? "outer_deserrrt shake" : "outer_deserrrt"}>
                                {/* href={king?._id ? `/coin/${king?._id}` : ""} */}
                                <Link href={''}>
                                    <img src="\asset\bgdessert.svg" className="img_rocks_side" />
                                    <img src="\asset\phonedesert.svg" className="img_rocks_side1 d-none" />
                                    <div className="king_desert">
                                        <h1>King Of The Desert</h1>
                                        <div className="inner__Desert">
                                            {/* <img src={king?.pfp ? king?.pfp : "asset/broken.png"} /> */}
                                            <div>
                                                {/* <h2>{king?.projectName ? king?.projectName : "--"}</h2> */}
                                                {/* <p>{king?.ticker ? king?.ticker : "--"}</p> */}
                                            </div>
                                        </div>
                                        {/* <h3>{king?.isGraduated ? (+king?.marketcap) >= 1 ? `$${formatMarketCap(+king?.marketcap)}` : "< $1" : king?.marketcap ? `$${formatEthinDollar(+king?.marketcap, ethPrice)}` : "--"}</h3> */}
                                    </div></Link>
                            </div>
                            <div className="main_top_cards">
                                <div className="left_side_cards">
                                    <div className="top_cards">
                                        <p>Rocks Created</p>
                                        {/* <h1>{stats?.totalProjectCount ? stats?.totalProjectCount : "--"}</h1> */}
                                    </div>
                                    <div className="top_cards">
                                        <p>Rocks Graduated</p>
                                        {/* <h1>{stats?.graduatedProjectsCount ? stats?.graduatedProjectsCount : "--"}</h1> */}
                                    </div>
                                </div>
                                <div className="left_side_cards">
                                    <div className="top_cards">
                                        <p>Volume Traded</p>
                                        {/* <h1>$ {stats?.totalVolume ? formatEthinDollar(+stats?.totalVolume, ethPrice) : "--"}</h1> */}
                                    </div>
                                    <div className="top_cards">
                                        <p>Total Users</p>
                                        {/* <h1>{stats?.userCount ? stats?.userCount : "--"}</h1> */}
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div className="Top_charts">
                            <div className="trendingchart">
                                <h1>Trending Rocks  <span>MCAP</span></h1>
                                {
                                    trending && trending?.length > 0 ? (
                                        trending?.map((item, index) => {
                                            return (
                                                <>
                                                    {/* `/coin/${item?._id}` */}
                                                    <Link href={''} >
                                                        <div key={index} className="inner_chart">
                                                            <div className="chart_bottoms">
                                                                <h2>{index + 1}.</h2>

                                                                <div className="circle_img">
                                                                    {/* <img className='img_penguaan' src={item.pfp ? item?.pfp : "asset/broken.png"} /> */}
                                                                    <div>
                                                                        {/* <h3>{item?.projectName}</h3> */}
                                                                        {/* <h4>${item?.ticker}</h4> */}
                                                                    </div>
                                                                </div>

                                                            </div>
                                                            <div className="chart_bottoms new_chart">
                                                                {/* <h5> {item?.isGraduated ? (+item?.marketcap) >= 1 ? `$${formatMarketCap(+item?.marketcap)}` : "< $1" : (+item?.marketcap) >= 1 ? `$${formatEthinDollar(+item?.marketcap, ethPrice)}` : "< $1"}</h5> */}
                                                            </div>
                                                        </div>
                                                    </Link>
                                                </>
                                            )
                                        })
                                    )
                                        :
                                        <div className='no_data_found'>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="71" height="70" viewBox="0 0 71 70" fill="none">
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M57.1465 30.2061V27.0112C57.1465 26.141 56.8008 25.3064 56.1854 24.691C55.5701 24.0757 54.7355 23.73 53.8652 23.73H40.0424C39.356 23.73 38.6869 23.9454 38.1293 24.3456C37.5717 24.7459 37.1536 25.3109 36.934 25.9612L36.6223 26.9248H16.6777C15.8075 26.9248 14.9729 27.2705 14.3575 27.8859C13.7422 28.5012 13.3965 29.3358 13.3965 30.2061H57.1465Z" fill="#E59572" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M13.2424 54.4873L14.6938 63.7787C14.8753 64.9383 15.4652 65.995 16.357 66.758C17.2488 67.5211 18.384 67.9405 19.5577 67.9404H51.4427C52.6165 67.9405 53.7516 67.5211 54.6434 66.758C55.5353 65.995 56.1251 64.9383 56.3066 63.7787L60.4082 37.5287C60.5172 36.8266 60.473 36.1093 60.2788 35.4259C60.0845 34.7424 59.7447 34.1091 59.2826 33.5694C58.8206 33.0297 58.2473 32.5962 57.602 32.2989C56.9567 32.0015 56.2548 31.8473 55.5443 31.8467H15.4562C14.7454 31.8465 14.0431 32.0003 13.3975 32.2974C12.7518 32.5945 12.1782 33.0279 11.716 33.5679C11.2538 34.1078 10.9141 34.7414 10.7201 35.4251C10.5261 36.1089 10.4825 36.8265 10.5923 37.5287L12.8268 51.8273C12.8493 51.9706 12.9278 52.0991 13.045 52.1845C13.1622 52.27 13.3086 52.3053 13.4519 52.2828C13.5952 52.2604 13.7237 52.1819 13.8091 52.0647C13.8945 51.9474 13.9299 51.8011 13.9074 51.6578L11.6729 37.3592C11.5878 36.8131 11.6219 36.255 11.7729 35.7234C11.924 35.1917 12.1883 34.6991 12.5477 34.2792C12.9072 33.8594 13.3532 33.5224 13.8553 33.2913C14.3573 33.0602 14.9035 32.9405 15.4562 32.9404H55.5443C56.097 32.9405 56.6431 33.0602 57.1452 33.2913C57.6472 33.5224 58.0933 33.8594 58.4527 34.2792C58.8122 34.6991 59.0765 35.1917 59.2275 35.7234C59.3785 36.255 59.4127 36.8131 59.3276 37.3592L55.226 63.6092C55.0849 64.5112 54.6261 65.3332 53.9324 65.9268C53.2387 66.5205 52.3558 66.8467 51.4427 66.8467H19.5577C18.6447 66.8467 17.7617 66.5205 17.068 65.9268C16.3743 65.3332 15.9155 64.5112 15.7744 63.6092L14.323 54.3189C14.3127 54.2472 14.2883 54.1784 14.2512 54.1163C14.2141 54.0541 14.1651 54 14.1069 53.957C14.0487 53.9139 13.9825 53.8829 13.9123 53.8656C13.842 53.8484 13.769 53.8452 13.6975 53.8563C13.626 53.8675 13.5574 53.8927 13.4958 53.9306C13.4341 53.9684 13.3805 54.0181 13.3382 54.0768C13.2959 54.1355 13.2656 54.202 13.2492 54.2724C13.2327 54.3429 13.2304 54.4159 13.2424 54.4873Z" fill="#E59572" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M19.3291 59.545V60.6639C19.3291 61.3891 19.6172 62.0846 20.13 62.5974C20.6428 63.1101 21.3383 63.3982 22.0635 63.3982H30.8135C31.5387 63.3982 32.2342 63.1101 32.747 62.5974C33.2598 62.0846 33.5479 61.3891 33.5479 60.6639V58.4764C33.5479 57.7512 33.2598 57.0557 32.747 56.5429C32.2342 56.0301 31.5387 55.742 30.8135 55.742H22.0635C21.311 55.742 20.6285 56.0471 20.133 56.5404C20.0332 56.6434 19.9779 56.7815 19.9789 56.9249C19.98 57.0683 20.0373 57.2055 20.1386 57.3071C20.2398 57.4086 20.3769 57.4663 20.5203 57.4678C20.6637 57.4692 20.8019 57.4143 20.9052 57.3148C21.0573 57.1627 21.2379 57.0421 21.4366 56.9599C21.6354 56.8777 21.8484 56.8355 22.0635 56.8357H30.8135C31.2486 56.8357 31.6659 57.0086 31.9736 57.3163C32.2812 57.6239 32.4541 58.0412 32.4541 58.4764V60.6639C32.4541 61.0988 32.2814 61.5159 31.974 61.8236C31.6665 62.1312 31.2495 62.3042 30.8146 62.3045H22.0635C21.6284 62.3045 21.2111 62.1316 20.9034 61.824C20.5957 61.5163 20.4229 61.099 20.4229 60.6639V59.545C20.4229 59.3999 20.3652 59.2608 20.2627 59.1583C20.1601 59.0557 20.021 58.9981 19.876 58.9981C19.7309 58.9981 19.5918 59.0557 19.4893 59.1583C19.3867 59.2608 19.3291 59.3999 19.3291 59.545ZM26.2897 24.4914C26.6539 23.866 27.1278 23.3114 27.6886 22.854C27.744 22.8083 27.7898 22.7521 27.8235 22.6886C27.8571 22.6251 27.8779 22.5557 27.8847 22.4842C27.8916 22.4127 27.8842 22.3405 27.8631 22.2719C27.8421 22.2032 27.8077 22.1394 27.7619 22.084C27.7162 22.0286 27.66 21.9828 27.5965 21.9492C27.5331 21.9155 27.4636 21.8947 27.3921 21.8879C27.3206 21.8811 27.2484 21.8884 27.1798 21.9095C27.1111 21.9306 27.0473 21.965 26.9919 22.0107C26.3304 22.5517 25.7714 23.207 25.3414 23.9456C25.2691 24.0713 25.2496 24.2207 25.2874 24.3608C25.3251 24.5009 25.4169 24.6202 25.5427 24.6926C25.6684 24.765 25.8178 24.7844 25.9579 24.7467C26.098 24.709 26.2174 24.6171 26.2897 24.4914ZM29.793 21.6301C30.6702 21.2801 31.6699 21.0406 32.78 20.929C32.8515 20.9218 32.9208 20.9006 32.9841 20.8667C33.0474 20.8327 33.1033 20.7866 33.1488 20.731C33.1942 20.6754 33.2283 20.6113 33.249 20.5426C33.2697 20.4738 33.2767 20.4016 33.2695 20.3302C33.2623 20.2587 33.2411 20.1894 33.2071 20.1261C33.1732 20.0628 33.1271 20.0069 33.0714 19.9614C33.0158 19.916 32.9518 19.8819 32.8831 19.8612C32.8143 19.8405 32.7421 19.8335 32.6707 19.8407C31.5461 19.9449 30.4414 20.2048 29.3883 20.6129C29.26 20.6711 29.159 20.7764 29.1063 20.9071C29.0536 21.0377 29.0533 21.1837 29.1054 21.3146C29.1574 21.4455 29.2579 21.5513 29.386 21.6101C29.514 21.6688 29.6598 21.676 29.793 21.6301ZM35.4586 20.9082C36.7525 21.0056 37.936 21.0264 39.0166 20.9804C39.0891 20.9785 39.1605 20.9621 39.2266 20.9324C39.2927 20.9026 39.3523 20.8599 39.4018 20.8069C39.4513 20.7539 39.4897 20.6916 39.5149 20.6236C39.5401 20.5556 39.5514 20.4832 39.5484 20.4108C39.5454 20.3383 39.5279 20.2672 39.4971 20.2015C39.4663 20.1359 39.4228 20.077 39.369 20.0283C39.3153 19.9796 39.2524 19.9421 39.184 19.918C39.1156 19.8939 39.0431 19.8836 38.9707 19.8878C37.9283 19.9315 36.7875 19.9107 35.5418 19.8167C35.4009 19.8126 35.264 19.8629 35.1593 19.9571C35.0546 20.0514 34.9902 20.1823 34.9795 20.3228C34.9688 20.4633 35.0126 20.6024 35.1018 20.7115C35.1911 20.8205 35.3188 20.8909 35.4586 20.9082ZM41.9686 20.6567C43.245 20.4171 44.3257 20.0628 45.2346 19.6264C45.2994 19.5953 45.3574 19.5517 45.4053 19.4982C45.4533 19.4447 45.4902 19.3822 45.514 19.3144C45.5378 19.2466 45.5481 19.1748 45.5441 19.1031C45.5402 19.0313 45.5221 18.9611 45.4911 18.8963C45.46 18.8315 45.4164 18.7735 45.3629 18.7255C45.3094 18.6776 45.2469 18.6406 45.1791 18.6168C45.1113 18.593 45.0395 18.5828 44.9678 18.5867C44.896 18.5907 44.8258 18.6087 44.761 18.6398C43.9286 19.0401 42.9366 19.3628 41.7674 19.5826C41.6969 19.5958 41.6296 19.6228 41.5695 19.662C41.5094 19.7012 41.4576 19.7518 41.4171 19.811C41.3766 19.8703 41.3481 19.9369 41.3333 20.0071C41.3186 20.0773 41.3178 20.1497 41.331 20.2203C41.3442 20.2908 41.3712 20.358 41.4104 20.4181C41.4496 20.4782 41.5002 20.53 41.5594 20.5705C41.6186 20.6111 41.6852 20.6395 41.7555 20.6543C41.8257 20.6691 41.8981 20.6699 41.9686 20.6567ZM47.4636 18.1071C48.4436 17.161 49.0189 16.0717 49.2782 14.9637C49.3055 14.8247 49.2779 14.6806 49.2011 14.5615C49.1242 14.4425 49.0043 14.358 48.8663 14.3257C48.7284 14.2933 48.5834 14.3158 48.4617 14.3883C48.34 14.4608 48.2512 14.5777 48.2139 14.7143C47.9985 15.6342 47.5172 16.5354 46.7046 17.3196C46.6001 17.4203 46.54 17.5583 46.5373 17.7033C46.5346 17.8484 46.5897 17.9885 46.6904 18.0929C46.791 18.1973 46.929 18.2575 47.074 18.2602C47.2191 18.2628 47.3592 18.2078 47.4636 18.1071ZM49.0179 11.1979C48.5847 10.0451 47.8475 9.0662 46.9518 8.44714C46.8324 8.36594 46.6857 8.33525 46.5438 8.36177C46.4018 8.3883 46.2761 8.46988 46.1941 8.58871C46.1121 8.70755 46.0804 8.854 46.106 8.99611C46.1315 9.13822 46.2122 9.26446 46.3305 9.34729C47.0568 9.84823 47.643 10.6489 47.9941 11.5829C48.0194 11.6501 48.0577 11.7117 48.1067 11.7642C48.1558 11.8166 48.2147 11.8588 48.2801 11.8885C48.3456 11.9181 48.4162 11.9346 48.4879 11.937C48.5597 11.9394 48.6313 11.9276 48.6985 11.9023C48.7657 11.877 48.8273 11.8387 48.8797 11.7897C48.9321 11.7406 48.9744 11.6817 49.004 11.6162C49.0337 11.5508 49.0502 11.4802 49.0526 11.4085C49.0549 11.3367 49.0431 11.2651 49.0179 11.1979ZM34.7685 8.44495C35.37 5.62745 37.7632 4.25698 39.4891 4.24714C40.0546 4.24386 40.5457 4.37729 40.8016 4.71854C40.9514 4.92089 40.9974 5.19214 40.9405 5.52464C40.9259 5.59635 40.9259 5.67026 40.9404 5.74198C40.9549 5.81371 40.9837 5.88179 41.025 5.9422C41.0663 6.00261 41.1193 6.05411 41.1809 6.09367C41.2424 6.13322 41.3113 6.16001 41.3834 6.17245C41.4555 6.1849 41.5294 6.18275 41.6007 6.16612C41.6719 6.1495 41.7391 6.11874 41.7983 6.07567C41.8575 6.0326 41.9074 5.97809 41.9451 5.91538C41.9828 5.85267 42.0075 5.78302 42.0179 5.71057C42.136 5.02698 41.9872 4.47901 41.6777 4.06448C41.2424 3.48151 40.4472 3.14792 39.4825 3.15339C37.3825 3.16542 34.4305 4.78745 33.6988 8.21745C33.6826 8.28816 33.6806 8.36139 33.693 8.43288C33.7053 8.50436 33.7318 8.57268 33.7708 8.63384C33.8098 8.695 33.8606 8.74778 33.9202 8.78912C33.9799 8.83045 34.0471 8.85951 34.1181 8.8746C34.189 8.88969 34.2623 8.89052 34.3336 8.87702C34.4048 8.86352 34.4727 8.83598 34.5333 8.79599C34.5938 8.75601 34.6458 8.70438 34.6861 8.64411C34.7265 8.58384 34.7545 8.51614 34.7685 8.44495Z" fill="#E59572" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M33.7043 8.44717C34.4436 11.8597 37.3858 13.4741 39.4803 13.4872C40.5183 13.4926 41.3594 13.1065 41.7718 12.4383C42.0189 12.0358 42.1272 11.5228 42.0124 10.8961C41.8691 10.125 41.3616 9.13733 40.2996 7.96374C40.2513 7.91052 40.193 7.86733 40.1281 7.83663C40.0631 7.80594 39.9928 7.78834 39.921 7.78483C39.7761 7.77775 39.6343 7.82854 39.5268 7.926C39.4736 7.97426 39.4304 8.03253 39.3997 8.09749C39.369 8.16244 39.3514 8.2328 39.3479 8.30455C39.3409 8.44947 39.3916 8.59126 39.4891 8.69874C40.2296 9.51577 40.6682 10.2125 40.8596 10.7976C41.0061 11.2439 41.0018 11.6015 40.8399 11.8651C40.6944 12.1014 40.4308 12.2458 40.1158 12.3245C39.7188 12.423 39.2419 12.4153 38.741 12.3092C37.1353 11.9701 35.2957 10.6281 34.7728 8.2153C34.7394 8.07641 34.6528 7.95615 34.5318 7.88023C34.4108 7.80432 34.2649 7.77877 34.1252 7.80907C33.9856 7.83936 33.8634 7.92309 33.7847 8.04234C33.7061 8.16159 33.6772 8.3069 33.7043 8.44717Z" fill="#E59572" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M34.0903 9.4248H41.413C41.7031 9.4248 41.9813 9.30957 42.1864 9.10445C42.3915 8.89933 42.5067 8.62114 42.5067 8.33105C42.5067 8.04097 42.3915 7.76277 42.1864 7.55766C41.9813 7.35254 41.7031 7.2373 41.413 7.2373H34.0903C33.8003 7.2373 33.5221 7.35254 33.3169 7.55766C33.1118 7.76277 32.9966 8.04097 32.9966 8.33105C32.9966 8.62114 33.1118 8.89933 33.3169 9.10445C33.5221 9.30957 33.8003 9.4248 34.0903 9.4248Z" fill="#E59572" />
                                            </svg>
                                            <p >No data available at this time!</p>
                                        </div>

                                }
                            </div>
                            <div className="trendingchart">
                                <h1>Top Gainers <span>MCAP</span></h1>
                                {
                                    gainer && gainer?.length > 0 ? (
                                        gainer?.map((item, index) => {
                                            return (
                                                <>
                                                {/* `/coin/${item?._id}` */}
                                                    <Link href={''} >
                                                        <div key={index} className="inner_chart">
                                                            <div className="chart_bottoms">
                                                                <h2>{index + 1}.</h2>

                                                                <div className="circle_img">
                                                                    {/* <img className='img_penguaan' src={item.pfp ? item?.pfp : "asset/broken.png"} /> */}
                                                                    <div>
                                                                        {/* <h3>{item?.projectName}</h3> */}
                                                                        {/* <h4>${item?.ticker}</h4> */}
                                                                    </div>
                                                                </div>

                                                            </div>
                                                            <div className="chart_bottoms new_chart">
                                                                {/* <h5> {item?.isGraduated ? (+item?.marketcap) >= 1 ? `$${formatMarketCap(+item?.marketcap)}` : "< $1" : (+item?.marketcap) >= 1 ? `$${formatEthinDollar(+item?.marketcap, ethPrice)}` : "< $1"}</h5> */}
                                                            </div>
                                                        </div>
                                                    </Link>
                                                </>
                                            )
                                        })
                                    )
                                        :
                                        <div className='no_data_found'>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="71" height="70" viewBox="0 0 71 70" fill="none">
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M57.1465 30.2061V27.0112C57.1465 26.141 56.8008 25.3064 56.1854 24.691C55.5701 24.0757 54.7355 23.73 53.8652 23.73H40.0424C39.356 23.73 38.6869 23.9454 38.1293 24.3456C37.5717 24.7459 37.1536 25.3109 36.934 25.9612L36.6223 26.9248H16.6777C15.8075 26.9248 14.9729 27.2705 14.3575 27.8859C13.7422 28.5012 13.3965 29.3358 13.3965 30.2061H57.1465Z" fill="#E59572" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M13.2424 54.4873L14.6938 63.7787C14.8753 64.9383 15.4652 65.995 16.357 66.758C17.2488 67.5211 18.384 67.9405 19.5577 67.9404H51.4427C52.6165 67.9405 53.7516 67.5211 54.6434 66.758C55.5353 65.995 56.1251 64.9383 56.3066 63.7787L60.4082 37.5287C60.5172 36.8266 60.473 36.1093 60.2788 35.4259C60.0845 34.7424 59.7447 34.1091 59.2826 33.5694C58.8206 33.0297 58.2473 32.5962 57.602 32.2989C56.9567 32.0015 56.2548 31.8473 55.5443 31.8467H15.4562C14.7454 31.8465 14.0431 32.0003 13.3975 32.2974C12.7518 32.5945 12.1782 33.0279 11.716 33.5679C11.2538 34.1078 10.9141 34.7414 10.7201 35.4251C10.5261 36.1089 10.4825 36.8265 10.5923 37.5287L12.8268 51.8273C12.8493 51.9706 12.9278 52.0991 13.045 52.1845C13.1622 52.27 13.3086 52.3053 13.4519 52.2828C13.5952 52.2604 13.7237 52.1819 13.8091 52.0647C13.8945 51.9474 13.9299 51.8011 13.9074 51.6578L11.6729 37.3592C11.5878 36.8131 11.6219 36.255 11.7729 35.7234C11.924 35.1917 12.1883 34.6991 12.5477 34.2792C12.9072 33.8594 13.3532 33.5224 13.8553 33.2913C14.3573 33.0602 14.9035 32.9405 15.4562 32.9404H55.5443C56.097 32.9405 56.6431 33.0602 57.1452 33.2913C57.6472 33.5224 58.0933 33.8594 58.4527 34.2792C58.8122 34.6991 59.0765 35.1917 59.2275 35.7234C59.3785 36.255 59.4127 36.8131 59.3276 37.3592L55.226 63.6092C55.0849 64.5112 54.6261 65.3332 53.9324 65.9268C53.2387 66.5205 52.3558 66.8467 51.4427 66.8467H19.5577C18.6447 66.8467 17.7617 66.5205 17.068 65.9268C16.3743 65.3332 15.9155 64.5112 15.7744 63.6092L14.323 54.3189C14.3127 54.2472 14.2883 54.1784 14.2512 54.1163C14.2141 54.0541 14.1651 54 14.1069 53.957C14.0487 53.9139 13.9825 53.8829 13.9123 53.8656C13.842 53.8484 13.769 53.8452 13.6975 53.8563C13.626 53.8675 13.5574 53.8927 13.4958 53.9306C13.4341 53.9684 13.3805 54.0181 13.3382 54.0768C13.2959 54.1355 13.2656 54.202 13.2492 54.2724C13.2327 54.3429 13.2304 54.4159 13.2424 54.4873Z" fill="#E59572" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M19.3291 59.545V60.6639C19.3291 61.3891 19.6172 62.0846 20.13 62.5974C20.6428 63.1101 21.3383 63.3982 22.0635 63.3982H30.8135C31.5387 63.3982 32.2342 63.1101 32.747 62.5974C33.2598 62.0846 33.5479 61.3891 33.5479 60.6639V58.4764C33.5479 57.7512 33.2598 57.0557 32.747 56.5429C32.2342 56.0301 31.5387 55.742 30.8135 55.742H22.0635C21.311 55.742 20.6285 56.0471 20.133 56.5404C20.0332 56.6434 19.9779 56.7815 19.9789 56.9249C19.98 57.0683 20.0373 57.2055 20.1386 57.3071C20.2398 57.4086 20.3769 57.4663 20.5203 57.4678C20.6637 57.4692 20.8019 57.4143 20.9052 57.3148C21.0573 57.1627 21.2379 57.0421 21.4366 56.9599C21.6354 56.8777 21.8484 56.8355 22.0635 56.8357H30.8135C31.2486 56.8357 31.6659 57.0086 31.9736 57.3163C32.2812 57.6239 32.4541 58.0412 32.4541 58.4764V60.6639C32.4541 61.0988 32.2814 61.5159 31.974 61.8236C31.6665 62.1312 31.2495 62.3042 30.8146 62.3045H22.0635C21.6284 62.3045 21.2111 62.1316 20.9034 61.824C20.5957 61.5163 20.4229 61.099 20.4229 60.6639V59.545C20.4229 59.3999 20.3652 59.2608 20.2627 59.1583C20.1601 59.0557 20.021 58.9981 19.876 58.9981C19.7309 58.9981 19.5918 59.0557 19.4893 59.1583C19.3867 59.2608 19.3291 59.3999 19.3291 59.545ZM26.2897 24.4914C26.6539 23.866 27.1278 23.3114 27.6886 22.854C27.744 22.8083 27.7898 22.7521 27.8235 22.6886C27.8571 22.6251 27.8779 22.5557 27.8847 22.4842C27.8916 22.4127 27.8842 22.3405 27.8631 22.2719C27.8421 22.2032 27.8077 22.1394 27.7619 22.084C27.7162 22.0286 27.66 21.9828 27.5965 21.9492C27.5331 21.9155 27.4636 21.8947 27.3921 21.8879C27.3206 21.8811 27.2484 21.8884 27.1798 21.9095C27.1111 21.9306 27.0473 21.965 26.9919 22.0107C26.3304 22.5517 25.7714 23.207 25.3414 23.9456C25.2691 24.0713 25.2496 24.2207 25.2874 24.3608C25.3251 24.5009 25.4169 24.6202 25.5427 24.6926C25.6684 24.765 25.8178 24.7844 25.9579 24.7467C26.098 24.709 26.2174 24.6171 26.2897 24.4914ZM29.793 21.6301C30.6702 21.2801 31.6699 21.0406 32.78 20.929C32.8515 20.9218 32.9208 20.9006 32.9841 20.8667C33.0474 20.8327 33.1033 20.7866 33.1488 20.731C33.1942 20.6754 33.2283 20.6113 33.249 20.5426C33.2697 20.4738 33.2767 20.4016 33.2695 20.3302C33.2623 20.2587 33.2411 20.1894 33.2071 20.1261C33.1732 20.0628 33.1271 20.0069 33.0714 19.9614C33.0158 19.916 32.9518 19.8819 32.8831 19.8612C32.8143 19.8405 32.7421 19.8335 32.6707 19.8407C31.5461 19.9449 30.4414 20.2048 29.3883 20.6129C29.26 20.6711 29.159 20.7764 29.1063 20.9071C29.0536 21.0377 29.0533 21.1837 29.1054 21.3146C29.1574 21.4455 29.2579 21.5513 29.386 21.6101C29.514 21.6688 29.6598 21.676 29.793 21.6301ZM35.4586 20.9082C36.7525 21.0056 37.936 21.0264 39.0166 20.9804C39.0891 20.9785 39.1605 20.9621 39.2266 20.9324C39.2927 20.9026 39.3523 20.8599 39.4018 20.8069C39.4513 20.7539 39.4897 20.6916 39.5149 20.6236C39.5401 20.5556 39.5514 20.4832 39.5484 20.4108C39.5454 20.3383 39.5279 20.2672 39.4971 20.2015C39.4663 20.1359 39.4228 20.077 39.369 20.0283C39.3153 19.9796 39.2524 19.9421 39.184 19.918C39.1156 19.8939 39.0431 19.8836 38.9707 19.8878C37.9283 19.9315 36.7875 19.9107 35.5418 19.8167C35.4009 19.8126 35.264 19.8629 35.1593 19.9571C35.0546 20.0514 34.9902 20.1823 34.9795 20.3228C34.9688 20.4633 35.0126 20.6024 35.1018 20.7115C35.1911 20.8205 35.3188 20.8909 35.4586 20.9082ZM41.9686 20.6567C43.245 20.4171 44.3257 20.0628 45.2346 19.6264C45.2994 19.5953 45.3574 19.5517 45.4053 19.4982C45.4533 19.4447 45.4902 19.3822 45.514 19.3144C45.5378 19.2466 45.5481 19.1748 45.5441 19.1031C45.5402 19.0313 45.5221 18.9611 45.4911 18.8963C45.46 18.8315 45.4164 18.7735 45.3629 18.7255C45.3094 18.6776 45.2469 18.6406 45.1791 18.6168C45.1113 18.593 45.0395 18.5828 44.9678 18.5867C44.896 18.5907 44.8258 18.6087 44.761 18.6398C43.9286 19.0401 42.9366 19.3628 41.7674 19.5826C41.6969 19.5958 41.6296 19.6228 41.5695 19.662C41.5094 19.7012 41.4576 19.7518 41.4171 19.811C41.3766 19.8703 41.3481 19.9369 41.3333 20.0071C41.3186 20.0773 41.3178 20.1497 41.331 20.2203C41.3442 20.2908 41.3712 20.358 41.4104 20.4181C41.4496 20.4782 41.5002 20.53 41.5594 20.5705C41.6186 20.6111 41.6852 20.6395 41.7555 20.6543C41.8257 20.6691 41.8981 20.6699 41.9686 20.6567ZM47.4636 18.1071C48.4436 17.161 49.0189 16.0717 49.2782 14.9637C49.3055 14.8247 49.2779 14.6806 49.2011 14.5615C49.1242 14.4425 49.0043 14.358 48.8663 14.3257C48.7284 14.2933 48.5834 14.3158 48.4617 14.3883C48.34 14.4608 48.2512 14.5777 48.2139 14.7143C47.9985 15.6342 47.5172 16.5354 46.7046 17.3196C46.6001 17.4203 46.54 17.5583 46.5373 17.7033C46.5346 17.8484 46.5897 17.9885 46.6904 18.0929C46.791 18.1973 46.929 18.2575 47.074 18.2602C47.2191 18.2628 47.3592 18.2078 47.4636 18.1071ZM49.0179 11.1979C48.5847 10.0451 47.8475 9.0662 46.9518 8.44714C46.8324 8.36594 46.6857 8.33525 46.5438 8.36177C46.4018 8.3883 46.2761 8.46988 46.1941 8.58871C46.1121 8.70755 46.0804 8.854 46.106 8.99611C46.1315 9.13822 46.2122 9.26446 46.3305 9.34729C47.0568 9.84823 47.643 10.6489 47.9941 11.5829C48.0194 11.6501 48.0577 11.7117 48.1067 11.7642C48.1558 11.8166 48.2147 11.8588 48.2801 11.8885C48.3456 11.9181 48.4162 11.9346 48.4879 11.937C48.5597 11.9394 48.6313 11.9276 48.6985 11.9023C48.7657 11.877 48.8273 11.8387 48.8797 11.7897C48.9321 11.7406 48.9744 11.6817 49.004 11.6162C49.0337 11.5508 49.0502 11.4802 49.0526 11.4085C49.0549 11.3367 49.0431 11.2651 49.0179 11.1979ZM34.7685 8.44495C35.37 5.62745 37.7632 4.25698 39.4891 4.24714C40.0546 4.24386 40.5457 4.37729 40.8016 4.71854C40.9514 4.92089 40.9974 5.19214 40.9405 5.52464C40.9259 5.59635 40.9259 5.67026 40.9404 5.74198C40.9549 5.81371 40.9837 5.88179 41.025 5.9422C41.0663 6.00261 41.1193 6.05411 41.1809 6.09367C41.2424 6.13322 41.3113 6.16001 41.3834 6.17245C41.4555 6.1849 41.5294 6.18275 41.6007 6.16612C41.6719 6.1495 41.7391 6.11874 41.7983 6.07567C41.8575 6.0326 41.9074 5.97809 41.9451 5.91538C41.9828 5.85267 42.0075 5.78302 42.0179 5.71057C42.136 5.02698 41.9872 4.47901 41.6777 4.06448C41.2424 3.48151 40.4472 3.14792 39.4825 3.15339C37.3825 3.16542 34.4305 4.78745 33.6988 8.21745C33.6826 8.28816 33.6806 8.36139 33.693 8.43288C33.7053 8.50436 33.7318 8.57268 33.7708 8.63384C33.8098 8.695 33.8606 8.74778 33.9202 8.78912C33.9799 8.83045 34.0471 8.85951 34.1181 8.8746C34.189 8.88969 34.2623 8.89052 34.3336 8.87702C34.4048 8.86352 34.4727 8.83598 34.5333 8.79599C34.5938 8.75601 34.6458 8.70438 34.6861 8.64411C34.7265 8.58384 34.7545 8.51614 34.7685 8.44495Z" fill="#E59572" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M33.7043 8.44717C34.4436 11.8597 37.3858 13.4741 39.4803 13.4872C40.5183 13.4926 41.3594 13.1065 41.7718 12.4383C42.0189 12.0358 42.1272 11.5228 42.0124 10.8961C41.8691 10.125 41.3616 9.13733 40.2996 7.96374C40.2513 7.91052 40.193 7.86733 40.1281 7.83663C40.0631 7.80594 39.9928 7.78834 39.921 7.78483C39.7761 7.77775 39.6343 7.82854 39.5268 7.926C39.4736 7.97426 39.4304 8.03253 39.3997 8.09749C39.369 8.16244 39.3514 8.2328 39.3479 8.30455C39.3409 8.44947 39.3916 8.59126 39.4891 8.69874C40.2296 9.51577 40.6682 10.2125 40.8596 10.7976C41.0061 11.2439 41.0018 11.6015 40.8399 11.8651C40.6944 12.1014 40.4308 12.2458 40.1158 12.3245C39.7188 12.423 39.2419 12.4153 38.741 12.3092C37.1353 11.9701 35.2957 10.6281 34.7728 8.2153C34.7394 8.07641 34.6528 7.95615 34.5318 7.88023C34.4108 7.80432 34.2649 7.77877 34.1252 7.80907C33.9856 7.83936 33.8634 7.92309 33.7847 8.04234C33.7061 8.16159 33.6772 8.3069 33.7043 8.44717Z" fill="#E59572" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M34.0903 9.4248H41.413C41.7031 9.4248 41.9813 9.30957 42.1864 9.10445C42.3915 8.89933 42.5067 8.62114 42.5067 8.33105C42.5067 8.04097 42.3915 7.76277 42.1864 7.55766C41.9813 7.35254 41.7031 7.2373 41.413 7.2373H34.0903C33.8003 7.2373 33.5221 7.35254 33.3169 7.55766C33.1118 7.76277 32.9966 8.04097 32.9966 8.33105C32.9966 8.62114 33.1118 8.89933 33.3169 9.10445C33.5221 9.30957 33.8003 9.4248 34.0903 9.4248Z" fill="#E59572" />
                                            </svg>
                                            <p >No data available at this time!</p>
                                        </div>
                                }
                            </div>
                        </div>

                        <div className="tabone_Data">
                            <Table responsive>
                                <thead>
                                    <tr>
                                        <th className="leftside">
                                            <div className="thdata">
                                                <p>Rocks</p>
                                                <svg xmlns="http://www.w3.org/2000/svg" width="6" height="8" viewBox="0 0 6 8" fill="none">
                                                    <path d="M5.2727 4.57129H2.72997H0.440293C0.0484758 4.57129 -0.147433 5.09169 0.130104 5.39675L2.24428 7.72058C2.58304 8.09294 3.13403 8.09294 3.47279 7.72058L4.27683 6.83681L5.58697 5.39675C5.86043 5.09169 5.66452 4.57129 5.2727 4.57129Z" fill="#C3BDBC" />
                                                    <path d="M5.2727 3.42877H2.72997H0.440293C0.0484758 3.42877 -0.147433 2.90838 0.130104 2.60332L2.24428 0.279478C2.58304 -0.0928748 3.13403 -0.0928748 3.47279 0.279478L4.27683 1.16325L5.58697 2.60332C5.86043 2.90838 5.66452 3.42877 5.2727 3.42877Z" fill="#C3BDBC" />
                                                </svg>
                                            </div>
                                        </th>
                                        <th>    <div className="thdata">
                                            <p>Age</p>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="6" height="8" viewBox="0 0 6 8" fill="none">
                                                <path d="M5.41552 4.57129H2.8728H0.583115C0.191298 4.57129 -0.00461033 5.09169 0.272927 5.39675L2.38711 7.72058C2.72586 8.09294 3.27686 8.09294 3.61562 7.72058L4.41966 6.83681L5.72979 5.39675C6.00325 5.09169 5.80734 4.57129 5.41552 4.57129Z" fill="#C3BDBC" />
                                                <path d="M5.41552 3.42877H2.8728H0.583115C0.191298 3.42877 -0.00461033 2.90838 0.272927 2.60332L2.38711 0.279478C2.72586 -0.0928748 3.27686 -0.0928748 3.61562 0.279478L4.41966 1.16325L5.72979 2.60332C6.00325 2.90838 5.80734 3.42877 5.41552 3.42877Z" fill="#C3BDBC" />
                                            </svg>
                                        </div></th>
                                        <th>    <div className="thdata">
                                            <p className="marketcap">Market Cap</p>
                                            <p className="mcap d-none">MCAP</p>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="7" height="8" viewBox="0 0 7 8" fill="none">
                                                <path d="M5.91552 4.57129H3.3728H1.08312C0.691298 4.57129 0.49539 5.09169 0.772927 5.39675L2.88711 7.72058C3.22586 8.09294 3.77686 8.09294 4.11562 7.72058L4.91966 6.83681L6.22979 5.39675C6.50325 5.09169 6.30734 4.57129 5.91552 4.57129Z" fill="#C3BDBC" />
                                                <path d="M5.91552 3.42877H3.3728H1.08312C0.691298 3.42877 0.49539 2.90838 0.772927 2.60332L2.88711 0.279478C3.22586 -0.0928748 3.77686 -0.0928748 4.11562 0.279478L4.91966 1.16325L6.22979 2.60332C6.50325 2.90838 6.30734 3.42877 5.91552 3.42877Z" fill="#C3BDBC" />
                                            </svg>
                                        </div></th>
                                        <th>    <div className="thdata">
                                            <p>Holders</p>
                                            <svg xmlns="http://www.w3.org/2000/svg" width="7" height="8" viewBox="0 0 7 8" fill="none">
                                                <path d="M5.91559 4.57129H3.37286H1.08318C0.691359 4.57129 0.495451 5.09169 0.772988 5.39675L2.88717 7.72058C3.22593 8.09294 3.77692 8.09294 4.11568 7.72058L4.91972 6.83681L6.22986 5.39675C6.50331 5.09169 6.3074 4.57129 5.91559 4.57129Z" fill="#C3BDBC" />
                                                <path d="M5.91559 3.42877H3.37286H1.08318C0.691359 3.42877 0.495451 2.90838 0.772988 2.60332L2.88717 0.279478C3.22593 -0.0928748 3.77692 -0.0928748 4.11568 0.279478L4.91972 1.16325L6.22986 2.60332C6.50331 2.90838 6.3074 3.42877 5.91559 3.42877Z" fill="#C3BDBC" />
                                            </svg>
                                        </div></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {
                                        rock && rock?.length > 0 ? (
                                            rock?.map((item, index) => {
                                                return (
                                                    <>
                                                        <tr key={index} className={index === 0 && shake ? "shake" : " "}>
                                                            <td className="leftside">
                                                            {/* `/coin/${item?._id}` */}
                                                                <Link href={''} >
                                                                    <div className="inner_td">
                                                                        {/* <img className='imgtabbble' src={item.pfp ? item?.pfp : "asset/broken.png"} /> */}
                                                                        <div className='align-headings'>
                                                                            {/* <h1>{item?.projectName}</h1> */}
                                                                            {/* <h2>${item?.ticker}</h2> */}
                                                                        </div>
                                                                    </div></Link>
                                                            </td>
                                                            <td>
                                                                {/* <h3>{getTimeInAges(item?.createdAt)}</h3> */}
                                                            </td>
                                                            <td>
                                                                {/* <h3> {item?.isGraduated ? (+item?.marketcap) >= 1 ? `$${formatMarketCap(+item?.marketcap)}` : "< $1" : (+item?.marketcap) >= 1 ? `$${formatEthinDollar(+item?.marketcap, ethPrice)}` : "< $1"}</h3> */}
                                                            </td>
                                                            <td>
                                                                {/* <h3>{item?.totalHolders >= 0 ? item?.totalHolders : "--"}</h3> */}
                                                            </td>
                                                        </tr>
                                                    </>
                                                )
                                            })
                                        )
                                            :
                                            <tr>
                                                <td colSpan={4}>
                                                    <div className='table_empty'>

                                                        <svg xmlns="http://www.w3.org/2000/svg" width="71" height="70" viewBox="0 0 71 70" fill="none">
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M57.1465 30.2061V27.0112C57.1465 26.141 56.8008 25.3064 56.1854 24.691C55.5701 24.0757 54.7355 23.73 53.8652 23.73H40.0424C39.356 23.73 38.6869 23.9454 38.1293 24.3456C37.5717 24.7459 37.1536 25.3109 36.934 25.9612L36.6223 26.9248H16.6777C15.8075 26.9248 14.9729 27.2705 14.3575 27.8859C13.7422 28.5012 13.3965 29.3358 13.3965 30.2061H57.1465Z" fill="#E59572" />
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M13.2424 54.4873L14.6938 63.7787C14.8753 64.9383 15.4652 65.995 16.357 66.758C17.2488 67.5211 18.384 67.9405 19.5577 67.9404H51.4427C52.6165 67.9405 53.7516 67.5211 54.6434 66.758C55.5353 65.995 56.1251 64.9383 56.3066 63.7787L60.4082 37.5287C60.5172 36.8266 60.473 36.1093 60.2788 35.4259C60.0845 34.7424 59.7447 34.1091 59.2826 33.5694C58.8206 33.0297 58.2473 32.5962 57.602 32.2989C56.9567 32.0015 56.2548 31.8473 55.5443 31.8467H15.4562C14.7454 31.8465 14.0431 32.0003 13.3975 32.2974C12.7518 32.5945 12.1782 33.0279 11.716 33.5679C11.2538 34.1078 10.9141 34.7414 10.7201 35.4251C10.5261 36.1089 10.4825 36.8265 10.5923 37.5287L12.8268 51.8273C12.8493 51.9706 12.9278 52.0991 13.045 52.1845C13.1622 52.27 13.3086 52.3053 13.4519 52.2828C13.5952 52.2604 13.7237 52.1819 13.8091 52.0647C13.8945 51.9474 13.9299 51.8011 13.9074 51.6578L11.6729 37.3592C11.5878 36.8131 11.6219 36.255 11.7729 35.7234C11.924 35.1917 12.1883 34.6991 12.5477 34.2792C12.9072 33.8594 13.3532 33.5224 13.8553 33.2913C14.3573 33.0602 14.9035 32.9405 15.4562 32.9404H55.5443C56.097 32.9405 56.6431 33.0602 57.1451 33.2913C57.6472 33.5224 58.0933 33.8594 58.4527 34.2792C58.8122 34.6991 59.0765 35.1917 59.2275 35.7234C59.3785 36.255 59.4127 36.8131 59.3276 37.3592L55.226 63.6092C55.0849 64.5112 54.6261 65.3332 53.9324 65.9268C53.2387 66.5205 52.3558 66.8467 51.4427 66.8467H19.5577C18.6447 66.8467 17.7617 66.5205 17.068 65.9268C16.3743 65.3332 15.9155 64.5112 15.7744 63.6092L14.323 54.3189C14.3127 54.2472 14.2883 54.1784 14.2512 54.1163C14.2141 54.0541 14.1651 54 14.1069 53.957C14.0487 53.9139 13.9825 53.8829 13.9123 53.8656C13.842 53.8484 13.769 53.8452 13.6975 53.8563C13.626 53.8675 13.5574 53.8927 13.4958 53.9305C13.4341 53.9684 13.3805 54.0181 13.3382 54.0768C13.2959 54.1355 13.2656 54.202 13.2492 54.2724C13.2327 54.3429 13.2304 54.4159 13.2424 54.4873Z" fill="#E59572" />
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M19.3291 59.545V60.6639C19.3291 61.3891 19.6172 62.0846 20.13 62.5974C20.6428 63.1101 21.3383 63.3982 22.0635 63.3982H30.8135C31.5387 63.3982 32.2342 63.1101 32.747 62.5974C33.2598 62.0846 33.5479 61.3891 33.5479 60.6639V58.4764C33.5479 57.7512 33.2598 57.0557 32.747 56.5429C32.2342 56.0301 31.5387 55.742 30.8135 55.742H22.0635C21.311 55.742 20.6285 56.0471 20.133 56.5404C20.0332 56.6434 19.9779 56.7815 19.9789 56.9249C19.98 57.0683 20.0373 57.2055 20.1386 57.3071C20.2398 57.4086 20.3769 57.4663 20.5203 57.4678C20.6637 57.4692 20.8019 57.4143 20.9052 57.3148C21.0573 57.1627 21.2379 57.0421 21.4366 56.9599C21.6354 56.8777 21.8484 56.8355 22.0635 56.8357H30.8135C31.2486 56.8357 31.6659 57.0086 31.9736 57.3163C32.2812 57.6239 32.4541 58.0412 32.4541 58.4764V60.6639C32.4541 61.0988 32.2814 61.5159 31.974 61.8236C31.6665 62.1312 31.2495 62.3042 30.8146 62.3045H22.0635C21.6284 62.3045 21.2111 62.1316 20.9034 61.824C20.5957 61.5163 20.4229 61.099 20.4229 60.6639V59.545C20.4229 59.3999 20.3652 59.2608 20.2627 59.1583C20.1601 59.0557 20.021 58.9981 19.876 58.9981C19.7309 58.9981 19.5918 59.0557 19.4893 59.1583C19.3867 59.2608 19.3291 59.3999 19.3291 59.545ZM26.2897 24.4914C26.6539 23.866 27.1278 23.3114 27.6886 22.854C27.744 22.8083 27.7898 22.7521 27.8235 22.6886C27.8571 22.6251 27.8779 22.5557 27.8847 22.4842C27.8916 22.4127 27.8842 22.3405 27.8631 22.2719C27.8421 22.2032 27.8077 22.1394 27.7619 22.084C27.7162 22.0286 27.66 21.9828 27.5965 21.9492C27.5331 21.9155 27.4636 21.8947 27.3921 21.8879C27.3206 21.8811 27.2484 21.8884 27.1798 21.9095C27.1111 21.9306 27.0473 21.965 26.9919 22.0107C26.3304 22.5517 25.7714 23.207 25.3414 23.9456C25.2691 24.0713 25.2496 24.2207 25.2874 24.3608C25.3251 24.5009 25.4169 24.6202 25.5427 24.6926C25.6684 24.765 25.8178 24.7844 25.9579 24.7467C26.098 24.709 26.2174 24.6171 26.2897 24.4914ZM29.793 21.6301C30.6702 21.2801 31.6699 21.0406 32.78 20.929C32.8515 20.9218 32.9208 20.9006 32.9841 20.8667C33.0474 20.8327 33.1033 20.7866 33.1488 20.731C33.1942 20.6754 33.2283 20.6113 33.249 20.5426C33.2697 20.4738 33.2767 20.4016 33.2695 20.3302C33.2623 20.2587 33.2411 20.1894 33.2071 20.1261C33.1732 20.0628 33.1271 20.0069 33.0714 19.9614C33.0158 19.916 32.9518 19.8819 32.8831 19.8612C32.8143 19.8405 32.7421 19.8335 32.6707 19.8407C31.5461 19.9449 30.4414 20.2048 29.3883 20.6129C29.26 20.6711 29.159 20.7764 29.1063 20.9071C29.0536 21.0377 29.0533 21.1837 29.1054 21.3146C29.1574 21.4455 29.2579 21.5513 29.386 21.6101C29.514 21.6688 29.6598 21.676 29.793 21.6301ZM35.4586 20.9082C36.7525 21.0056 37.936 21.0264 39.0166 20.9804C39.0891 20.9785 39.1605 20.9621 39.2266 20.9324C39.2927 20.9026 39.3523 20.8599 39.4018 20.8069C39.4513 20.7539 39.4897 20.6916 39.5149 20.6236C39.5401 20.5556 39.5514 20.4832 39.5484 20.4108C39.5454 20.3383 39.5279 20.2672 39.4971 20.2015C39.4663 20.1359 39.4228 20.077 39.369 20.0283C39.3153 19.9796 39.2524 19.9422 39.184 19.918C39.1156 19.8939 39.0431 19.8836 38.9707 19.8878C37.9283 19.9315 36.7875 19.9107 35.5418 19.8167C35.4009 19.8126 35.264 19.8629 35.1593 19.9571C35.0546 20.0514 34.9902 20.1823 34.9795 20.3228C34.9688 20.4633 35.0126 20.6024 35.1018 20.7115C35.1911 20.8205 35.3188 20.8909 35.4586 20.9082ZM41.9686 20.6567C43.245 20.4171 44.3257 20.0628 45.2346 19.6264C45.2994 19.5953 45.3574 19.5517 45.4053 19.4982C45.4533 19.4447 45.4902 19.3822 45.514 19.3144C45.5378 19.2466 45.5481 19.1748 45.5441 19.1031C45.5402 19.0313 45.5222 18.9611 45.4911 18.8963C45.46 18.8315 45.4164 18.7735 45.3629 18.7255C45.3094 18.6776 45.2469 18.6406 45.1791 18.6168C45.1113 18.593 45.0395 18.5828 44.9678 18.5867C44.896 18.5907 44.8258 18.6087 44.761 18.6398C43.9286 19.0401 42.9366 19.3628 41.7674 19.5826C41.6969 19.5958 41.6296 19.6228 41.5695 19.662C41.5094 19.7012 41.4576 19.7518 41.4171 19.8111C41.3766 19.8703 41.3481 19.9369 41.3333 20.0071C41.3186 20.0773 41.3178 20.1497 41.331 20.2203C41.3442 20.2908 41.3712 20.358 41.4104 20.4181C41.4496 20.4782 41.5002 20.53 41.5594 20.5705C41.6186 20.6111 41.6852 20.6395 41.7555 20.6543C41.8257 20.6691 41.8981 20.6699 41.9686 20.6567ZM47.4636 18.1071C48.4436 17.161 49.0189 16.0717 49.2782 14.9637C49.3055 14.8247 49.2779 14.6806 49.2011 14.5615C49.1242 14.4425 49.0043 14.358 48.8663 14.3257C48.7284 14.2933 48.5834 14.3158 48.4617 14.3883C48.34 14.4608 48.2512 14.5777 48.2139 14.7143C47.9985 15.6342 47.5172 16.5354 46.7046 17.3196C46.6001 17.4203 46.54 17.5583 46.5373 17.7033C46.5346 17.8484 46.5897 17.9885 46.6903 18.0929C46.791 18.1973 46.929 18.2575 47.074 18.2602C47.2191 18.2628 47.3592 18.2078 47.4636 18.1071ZM49.0179 11.1979C48.5847 10.0451 47.8475 9.0662 46.9518 8.44714C46.8324 8.36594 46.6857 8.33525 46.5438 8.36177C46.4018 8.3883 46.2761 8.46988 46.1941 8.58871C46.1121 8.70755 46.0804 8.854 46.106 8.99611C46.1315 9.13822 46.2122 9.26446 46.3305 9.34729C47.0568 9.84823 47.643 10.6489 47.9941 11.5829C48.0194 11.6501 48.0577 11.7117 48.1067 11.7642C48.1558 11.8166 48.2147 11.8588 48.2801 11.8885C48.3456 11.9181 48.4162 11.9346 48.4879 11.937C48.5597 11.9394 48.6313 11.9276 48.6985 11.9023C48.7657 11.877 48.8273 11.8387 48.8797 11.7897C48.9321 11.7406 48.9744 11.6817 49.004 11.6163C49.0337 11.5508 49.0502 11.4802 49.0526 11.4085C49.0549 11.3367 49.0431 11.2651 49.0179 11.1979ZM34.7685 8.44495C35.37 5.62745 37.7632 4.25698 39.4891 4.24714C40.0546 4.24386 40.5457 4.37729 40.8016 4.71854C40.9514 4.92089 40.9974 5.19214 40.9405 5.52464C40.9259 5.59635 40.9259 5.67026 40.9404 5.74198C40.9549 5.81371 40.9837 5.88179 41.025 5.9422C41.0663 6.00261 41.1193 6.05411 41.1809 6.09367C41.2424 6.13322 41.3113 6.16001 41.3834 6.17245C41.4555 6.1849 41.5294 6.18275 41.6007 6.16612C41.6719 6.1495 41.7391 6.11874 41.7983 6.07567C41.8575 6.0326 41.9074 5.97809 41.9451 5.91538C41.9828 5.85267 42.0075 5.78302 42.0179 5.71057C42.136 5.02698 41.9872 4.47901 41.6777 4.06448C41.2424 3.48151 40.4472 3.14792 39.4825 3.15339C37.3825 3.16542 34.4305 4.78745 33.6988 8.21745C33.6826 8.28816 33.6806 8.36139 33.693 8.43288C33.7053 8.50436 33.7318 8.57268 33.7708 8.63384C33.8098 8.695 33.8606 8.74778 33.9202 8.78912C33.9799 8.83045 34.0471 8.85951 34.1181 8.8746C34.189 8.88969 34.2623 8.89052 34.3336 8.87702C34.4048 8.86352 34.4727 8.83598 34.5333 8.79599C34.5938 8.75601 34.6458 8.70438 34.6861 8.64411C34.7265 8.58384 34.7545 8.51614 34.7685 8.44495Z" fill="#E59572" />
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M33.7043 8.44717C34.4436 11.8597 37.3858 13.4741 39.4803 13.4872C40.5183 13.4926 41.3594 13.1065 41.7718 12.4383C42.0189 12.0358 42.1272 11.5228 42.0124 10.8961C41.8691 10.125 41.3616 9.13733 40.2996 7.96374C40.2513 7.91052 40.193 7.86733 40.1281 7.83663C40.0631 7.80594 39.9928 7.78834 39.921 7.78483C39.7761 7.77775 39.6343 7.82854 39.5268 7.926C39.4736 7.97426 39.4304 8.03253 39.3997 8.09749C39.369 8.16244 39.3514 8.2328 39.3479 8.30455C39.3409 8.44947 39.3916 8.59126 39.4891 8.69874C40.2296 9.51577 40.6682 10.2125 40.8596 10.7976C41.0061 11.2439 41.0018 11.6015 40.8399 11.8651C40.6944 12.1014 40.4308 12.2458 40.1158 12.3245C39.7188 12.423 39.2419 12.4153 38.741 12.3092C37.1353 11.9701 35.2957 10.6281 34.7728 8.2153C34.7394 8.07641 34.6528 7.95615 34.5318 7.88023C34.4108 7.80432 34.2649 7.77877 34.1252 7.80907C33.9856 7.83936 33.8634 7.92309 33.7847 8.04234C33.7061 8.16159 33.6772 8.3069 33.7043 8.44717Z" fill="#E59572" />
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M34.0903 9.4248H41.413C41.7031 9.4248 41.9813 9.30957 42.1864 9.10445C42.3915 8.89933 42.5067 8.62114 42.5067 8.33105C42.5067 8.04097 42.3915 7.76277 42.1864 7.55766C41.9813 7.35254 41.7031 7.2373 41.413 7.2373H34.0903C33.8003 7.2373 33.5221 7.35254 33.3169 7.55766C33.1118 7.76277 32.9966 8.04097 32.9966 8.33105C32.9966 8.62114 33.1118 8.89933 33.3169 9.10445C33.5221 9.30957 33.8003 9.4248 34.0903 9.4248Z" fill="#E59572" />
                                                        </svg>
                                                        <p className="datafound">No data available at this time!</p>



                                                    </div>
                                                </td>
                                            </tr>
                                    }
                                </tbody>
                            </Table>
                            <div className="pagination_mains">

                                <div>
                                    <h6>SHOWING {(currentPage - 1) * 10 + 1}-{Math.min(currentPage * 10, totalItems)} OF {totalItems}</h6>
                                </div>
                                <div className="innner_pagi">
                                    <Pagination >
                                        {
                                            +currentPage > 1 &&
                                            <div className='rightsideee'>
                                                <img
                                                    src="/asset/leftarrow.svg"
                                                    // onClick={() => handlePageChange(currentPage - 1)}
                                                    style={{ cursor: 'pointer' }}
                                                    className='imggggggright'
                                                />
                                            </div>
                                        }
                                        {currentPage > 5 && <Pagination.Ellipsis />}
                                        {/* {pageItems.slice(Math.max(currentPage - 3, 0), Math.min(currentPage + 2, totalPages - 1)).map((page) => (
                                            <Pagination.Item
                                                key={page}
                                                active={page === +currentPage}
                                                onClick={() => handlePageChange(page)}
                                            >
                                                {page}
                                            </Pagination.Item>
                                        ))} */}
                                        {currentPage < totalPages - 2 && <Pagination.Ellipsis />}
                                        {/* {totalPages > 1 && (
                                            <Pagination.Item active={+currentPage === +totalPages} onClick={() => handlePageChange(totalPages)}>
                                                {totalPages}
                                            </Pagination.Item>
                                        )} */}
                                        {
                                            +totalPages != +currentPage &&
                                            <div className='rightsideee'>
                                                {/* <img
                                                    src="/asset/rightarrow.svg"
                                                    onClick={() => handlePageChange(currentPage + 1)}
                                                    style={{ cursor: 'pointer' }}
                                                    className='imggggggright'
                                                /> */}
                                            </div>
                                        }

                                    </Pagination>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </section>

        </>
    );
};

export default Banner;
